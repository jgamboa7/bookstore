import { Amplify } from 'aws-amplify';
import React, { useState } from 'react';
import { Authenticator } from '@aws-amplify/ui-react';
import { fetchAuthSession } from 'aws-amplify/auth';
import '@aws-amplify/ui-react/styles.css';

// Updated Amplify configuration
Amplify.configure({
  Auth: {
    Cognito: {
      region: 'eu-central-1',
      userPoolId: 'eu-central-1_WzD0a7j9d',
      userPoolClientId: '4hr3o9qh15r6ebhb6r2poabt8i',
    }
  }
});

function App() {
  const [file, setFile] = useState(null);
  const [keywords, setKeywords] = useState('');
  const [searchQuery, setSearchQuery] = useState('');
  const [searchResults, setSearchResults] = useState([]);

  const handleUpload = async () => {
    if (!file || !keywords) {
      alert('Please select a file and enter keywords.');
      return;
    }
    try {
      const session = await fetchAuthSession();
      const token = session.tokens?.idToken?.toString();
      const formData = new FormData();
      formData.append('file', file);
      formData.append('keywords', keywords);
      const res = await fetch('https://ug2nos0tmh.execute-api.eu-central-1.amazonaws.com/prod/upload', {
        method: 'POST',
        headers: {
          Authorization: `Bearer ${token}`,
        },
        body: formData,
      });
      if (res.ok) {
        alert('File uploaded successfully!');
      } else {
        alert('Upload failed.');
      }
    } catch (err) {
      console.error('Upload error:', err);
      alert('Upload error.');
    }
  };

  const handleSearch = async () => {
    try {
      const session = await fetchAuthSession();
      const token = session.tokens?.idToken?.toString();
      const res = await fetch(`https://ug2nos0tmh.execute-api.eu-central-1.amazonaws.com/prod/search?query=${searchQuery}`, {
        headers: {
          Authorization: `Bearer ${token}`,
        },
      });
      if (!res.ok) {
        throw new Error('Search failed');
      }
      const data = await res.json();
      setSearchResults(data.results || []);
    } catch (err) {
      console.error('Search error:', err);
      alert('Search error.');
    }
  };

  return (
    <Authenticator>
      {({ signOut, user }) => (
        <div className="App">
          <h1>Welcome, {user.username}</h1>
          <section>
            <h2>Upload Book</h2>
            <input type="file" accept=".pdf,.epub,.docx" onChange={(e) => setFile(e.target.files[0])} />
            <input
              type="text"
              placeholder="Enter keywords"
              value={keywords}
              onChange={(e) => setKeywords(e.target.value)}
            />
            <button onClick={handleUpload}>Upload</button>
          </section>
          <section>
            <h2>Search Books</h2>
            <input
              type="text"
              placeholder="Search..."
              value={searchQuery}
              onChange={(e) => setSearchQuery(e.target.value)}
            />
            <button onClick={handleSearch}>Search</button>
            <ul>
              {searchResults.map((book, i) => (
                <li key={i}>{book.title || book.filename || 'Unnamed Book'}</li>
              ))}
            </ul>
          </section>
          <button onClick={signOut}>Sign out</button>
        </div>
      )}
    </Authenticator>
  );
}

export default App;
